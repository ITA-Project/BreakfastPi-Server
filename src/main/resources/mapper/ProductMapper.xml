<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ita.domain.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.ita.domain.entity.Product">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="sales" jdbcType="INTEGER" property="sales"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="status_message" jdbcType="VARCHAR" property="statusMessage"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from product
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ita.domain.entity.Product">
        insert into product (id, name, description,
                             image_url, price, stock,
                             sales, status, status_message, category_id,
                             create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{imageUrl,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{stock,jdbcType=INTEGER},
                0, #{status,jdbcType=TINYINT}, #{statusMessage,jdbcType=TINYINT},
                #{categoryId,jdbcType=INTEGER}, now(), now())
    </insert>
    <update id="update" parameterType="com.ita.domain.entity.Product">
        update product
        set name        = #{name,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            image_url   = #{imageUrl,jdbcType=VARCHAR},
            price       = #{price,jdbcType=DECIMAL},
            stock       = #{stock,jdbcType=INTEGER},
            sales       = #{sales,jdbcType=INTEGER},
            status      = #{status,jdbcType=TINYINT},
            status_message      = #{statusMessage,jdbcType=TINYINT},
            category_id = #{categoryId,jdbcType=INTEGER},
            update_time = now()
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               name,
               description,
               image_url,
               price,
               stock,
               sales,
               status,
               status_message,
               category_id,
               create_time,
               update_time
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>
  <select id="selectByStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               name,
               description,
               image_url,
               price,
               stock,
               sales,
               status,
               status_message,
               category_id,
               create_time,
               update_time
        from product
        where status = #{status,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               name,
               description,
               image_url,
               price,
               stock,
               sales,
               status,
               status_message,
               category_id,
               create_time,
               update_time
        from product
    </select>

    <select id="selectAllByCategoryIds" resultMap="BaseResultMap">
        select id,
        name,
        description,
        image_url,
        price,
        stock,
        sales,
        status,
        status_message,
        category_id,
        create_time,
        update_time
        from product
        <where>
            <if test="list == null or list.size() == 0">
                1 = 2
            </if>
            <if test="list != null and list.size() > 0">
                category_id in
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getRecommendProducts" resultMap="BaseResultMap">
        select id,
               name,
               description,
               image_url,
               price,
               stock,
               sales,
               status,
               status_message,
               category_id,
               create_time,
               update_time
        from product
        order by sales desc
    </select>
    <select id="selectAllByProductIds" resultMap="BaseResultMap">
        select id,
        name,
        description,
        image_url,
        price,
        stock,
        sales,
        status_message,
        status,
        category_id,
        create_time,
        update_time
        from product
        <where>
            <if test="list == null or list.size() == 0">
                1 = 2
            </if>
            <if test="list != null and list.size() > 0">
                id in
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    <delete id="deleteByCategoryId" parameterType="java.lang.Integer">
        delete
        from product
        where category_id = #{categoryId,jdbcType=INTEGER}
    </delete>

    <select id="selectAllByCategoryIdsAndSearchKeyList" resultMap="BaseResultMap">
      select id,
      name,
      description,
      image_url,
      price,
      stock,
      sales,
      status,
      status_message,
      category_id,
      create_time,
      update_time
      from product
      <where>
        <if test="categoryIds == null or categoryIds.size() == 0">
          1 = 2
        </if>
        <if test="categoryIds != null and categoryIds.size() > 0">
          category_id in
          <foreach collection="categoryIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
          </foreach>
        </if>
        and (
        <if test="searchKeyList == null or searchKeyList.size() == 0">
          1 = 2
        </if>
        <if test="searchKeyList != null and searchKeyList.size() > 0">
          <foreach collection="searchKeyList" item="item" index="index" separator="and">
            name LIKE CONCAT('%',#{item},'%')
          </foreach>
        </if>
        )
      </where>
    </select>
</mapper>
