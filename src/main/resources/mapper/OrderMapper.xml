<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ita.domain.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.ita.domain.entity.Order">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_number" jdbcType="CHAR" property="orderNumber"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="deliver_time" jdbcType="TIMESTAMP" property="deliverTime"/>
        <result column="store_time" jdbcType="TIMESTAMP" property="storeTime"/>
        <result column="accepted_time" jdbcType="TIMESTAMP" property="acceptedTime"/>
        <result column="completed_time" jdbcType="TIMESTAMP" property="completedTime"/>
        <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="box_id" jdbcType="INTEGER" property="boxId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="estimated_time" jdbcType="TIMESTAMP" property="estimatedTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>
    <resultMap id="OrderMap" type="com.ita.domain.dto.OrderDTO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_number" jdbcType="CHAR" property="orderNumber"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="deliver_time" jdbcType="TIMESTAMP" property="deliverTime"/>
        <result column="store_time" jdbcType="TIMESTAMP" property="storeTime"/>
        <result column="accepted_time" jdbcType="TIMESTAMP" property="acceptedTime"/>
        <result column="completed_time" jdbcType="TIMESTAMP" property="completedTime"/>
        <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="estimated_time" jdbcType="TIMESTAMP" property="estimatedTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <association property="box" javaType="com.ita.domain.dto.BoxDTO">
            <id column="bid" property="id"/>
            <result column="address" property="address"/>
            <result column="number" property="number"/>
        </association>
        <collection property="orderItems" ofType="com.ita.domain.dto.OrderItemDTO">
            <id column="oi_id" property="id"/>
            <result column="quantity" property="quantity"/>
            <association property="product" javaType="com.ita.domain.dto.ProductDTO">
                <id column="pid" property="id"/>
                <result column="name" property="name"/>
                <result column="description" property="description"/>
                <result column="image_url" property="imageUrl"/>
                <result column="price" property="price"/>
            </association>
        </collection>
    </resultMap>
    <resultMap id="OrderSaleMap" type="com.ita.domain.dto.OrderSaleDTO">
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="sale_count" jdbcType="INTEGER" property="saleCount"/>
        <result column="sale_amount" jdbcType="DECIMAL" property="saleAmount"/>
    </resultMap>
    <resultMap id="OrderUserMap" type="com.ita.domain.dto.suadmin.UserDataDTO">
      <result column="type" jdbcType="INTEGER" property="type"/>
      <result column="user_count" jdbcType="INTEGER" property="userCount"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from `order`
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ita.domain.entity.Order">
        insert into `order` (id, order_number, payment_time,
                           deliver_time, store_time, completed_time, accepted_time,
                           cancel_time, amount, user_id,
                           box_id, create_time, update_time,
                           estimated_time, status)
        values (#{id,jdbcType=INTEGER}, #{orderNumber,jdbcType=CHAR}, #{paymentTime,jdbcType=TIMESTAMP},
                #{deliverTime,jdbcType=TIMESTAMP}, #{storeTime,jdbcType=TIMESTAMP}, #{completedTime,jdbcType=TIMESTAMP}, #{acceptedTime,jdbcType=TIMESTAMP},
                #{cancelTime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, #{userId,jdbcType=INTEGER},
                #{boxId,jdbcType=INTEGER}, now(), now(),
                #{estimatedTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.ita.domain.entity.Order">
        update `order`
        set order_number   = #{orderNumber,jdbcType=CHAR},
            payment_time   = #{paymentTime,jdbcType=TIMESTAMP},
            deliver_time   = #{deliverTime,jdbcType=TIMESTAMP},
            store_time     = #{storeTime,jdbcType=TIMESTAMP},
            accepted_time  = #{storeTime,jdbcType=TIMESTAMP},
            completed_time = #{completedTime,jdbcType=TIMESTAMP},
            cancel_time    = #{cancelTime,jdbcType=TIMESTAMP},
            amount         = #{amount,jdbcType=DECIMAL},
            user_id        = #{userId,jdbcType=INTEGER},
            box_id         = #{boxId,jdbcType=INTEGER},
            update_time    = now(),
            estimated_time = #{estimatedTime,jdbcType=TIMESTAMP},
            status         = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateStatusByOrderNumber">
        update `order`
        set update_time = now(),
            status      = #{status,jdbcType=TINYINT}
        where order_number = #{orderNumber,jdbcType=CHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               order_number,
               payment_time,
               deliver_time,
               store_time,
               accepted_time,
               completed_time,
               cancel_time,
               amount,
               user_id,
               box_id,
               create_time,
               update_time,
               estimated_time,
               status
        from `order`
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByOrderNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,
               order_number,
               payment_time,
               deliver_time,
               store_time,
               accepted_time,
               completed_time,
               cancel_time,
               amount,
               user_id,
               box_id,
               create_time,
               update_time,
               estimated_time,
               status
        from `order`
        where order_number = #{orderNumber,jdbcType=CHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               order_number,
               payment_time,
               deliver_time,
               store_time,
               accepted_time,
               completed_time,
               cancel_time,
               amount,
               user_id,
               box_id,
               create_time,
               update_time,
               estimated_time,
               status
        from `order`
    </select>
    <select id="selectAllByStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               order_number,
               payment_time,
               deliver_time,
               store_time,
               accepted_time,
               completed_time,
               cancel_time,
               amount,
               user_id,
               box_id,
               create_time,
               update_time,
               estimated_time,
               status
        from `order` o
        where o.status = #{status,jdbcType=INTEGER}
    </select>
    <select id="getOrdersByUser" resultMap="BaseResultMap">
        select o.id, o.order_number, o.payment_time, o.deliver_time, o.store_time, o.accepted_time,
        o.completed_time, o.cancel_time, o.amount, o.user_id, o.create_time,
        o.update_time, o.estimated_time, o.status, o.box_id
        from `order` o
        where o.user_id = #{userId,jdbcType=INTEGER} and o.status in
        <foreach collection="statusList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by o.create_time desc
    </select>

    <select id="getOrdersByShop" resultMap="OrderMap">
        select o.id, o.order_number, o.payment_time, o.deliver_time, o.store_time, o.accepted_time,
        o.completed_time, o.cancel_time, o.amount, o.user_id, o.create_time,
        o.update_time, o.estimated_time, o.status,
        oi.id as bid, oi.id as oi_id, oi.quantity,
        p.id as pid, p.name, p.description, p.image_url, p.price
        from `order` o
        inner join order_item oi on o.order_number = oi.order_number
        inner join product p on p.id = oi.product_id
        where o.status in
        <foreach collection="statusList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="productIdList == null or productIdList.size() == 0">
            and 1 = 2
        </if>
        <if test="productIdList != null and productIdList.size() > 0">
            and oi.product_id in
            <foreach collection="productIdList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        order by o.create_time desc
    </select>
    <select id="selectOrdersByStatus"  resultMap="OrderMap">
        select o.id, o.order_number, o.payment_time, o.deliver_time, o.store_time,
              o.completed_time, o.cancel_time, o.amount, o.user_id, o.create_time,
              o.update_time, o.estimated_time, o.status,
              b.id as bid, b.address, b.number,
              oi.id as oi_id, oi.quantity,
              p.id as pid, p.name, p.description, p.image_url, p.price
        from `order` o inner join box b on o.box_id = b.id
        inner join order_item oi on o.order_number = oi.order_number
        inner join product p on p.id = oi.product_id
        where o.status in
        <foreach collection="statusList" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
        order by o.create_time desc
    </select>
    <update id="updateStatusByPrimaryKey">
          update `order`
          set status = #{status,jdbcType=INTEGER}
          where status = #{prevStatus,jdbcType=INTEGER} and id in
          <foreach collection="orderIds" item="item" open="(" separator="," close=")">
            #{item}
          </foreach>
    </update>
    <select id="selectOrdersByIds"  resultMap="OrderMap">
      select o.id, o.order_number, o.payment_time, o.deliver_time, o.store_time,
      o.completed_time, o.cancel_time, o.amount, o.user_id, o.create_time,
      o.update_time, o.estimated_time, o.status,
      b.id as bid, b.address, b.number,
      oi.id as oi_id, oi.quantity,
      p.id as pid, p.name, p.description, p.image_url, p.price
      from `order` o inner join box b on o.box_id = b.id
      inner join order_item oi on o.order_number = oi.order_number
      inner join product p on p.id = oi.product_id
      where o.id in
      <foreach collection="orderIds" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
      order by o.create_time desc
    </select>
    <select id="selectOrdersByProductIdAndShopAndPeriodTime" parameterType="com.ita.domain.dto.suadmin.query.OrderQuery"
            resultType="Long">
        select count(*) from `order` o
        left join order_item oi on o.order_number = oi.order_number
        left join product p on oi.product_id = p.id
        left join category c on c.id = p.category_id
        where o.status = 5 and
         p.id = #{productId} and
         c.shop_id = #{shopId} and
         o.completed_time &gt;= #{startTime} and
         o.completed_time &lt;= #{endTime}
    </select>
    <select id="selectSaleByShopAndPeriodTime" parameterType="com.ita.domain.dto.suadmin.query.OrderQuery"
            resultMap="OrderSaleMap">
        select
        <if test="formatType == '%w'">
            ( (day(o.completed_time)+WEEKDAY(o.completed_time-interval day(o.completed_time) day)) div 7 + 1 ) type,
        </if>
        <if test="formatType == '%e'">
            date_format(o.completed_time, '%w') type,
        </if>
        <if test="formatType == '%m'">
            date_format(o.completed_time, '%m') type,
        </if>
        count(*) sale_count, sum(o.amount) sale_amount
        from `order` o
        left join order_item oi on o.order_number = oi.order_number
        left join product p on oi.product_id = p.id
        left join category c on c.id = p.category_id
        where o.status = 5 and
        c.shop_id = #{shopId} and
        o.completed_time &gt;= #{startTime} and
        o.completed_time &lt;= #{endTime}
        group by
        <if test="formatType == '%w'">
            (day(o.completed_time)+WEEKDAY(o.completed_time-interval day(o.completed_time) day)) div 7 + 1;
        </if>
        <if test="formatType == '%e'">
            date_format(o.completed_time, '%w');
        </if>
        <if test="formatType == '%m'">
            date_format(o.completed_time, '%m');
        </if>
    </select>
    <select id="selectOrderByShopAndPeriodTime" parameterType="com.ita.domain.dto.suadmin.query.OrderQuery"
            resultMap="BaseResultMap">
       select o.completed_time completed_time, o.order_number order_number
        from `order` o
        left join order_item oi on o.order_number = oi.order_number
        left join product p on oi.product_id = p.id
        left join category c on c.id = p.category_id
        where o.status = 5 and
         c.shop_id = #{shopId} and
         o.completed_time &gt;= #{startTime} and
         o.completed_time &lt;= #{endTime};
    </select>
    <select id="selectUserByShopAndPeriodTime" parameterType="com.ita.domain.dto.suadmin.query.OrderQuery"
            resultMap="OrderUserMap">
        select type, count(user_id) as user_count
        FROM (select DISTINCT
        <if test="formatType == '%w'">
            ( (day(o.completed_time)+WEEKDAY(o.completed_time-interval day(o.completed_time) day)) div 7 + 1 ) type,
        </if>
        <if test="formatType == '%e'">
            date_format(o.completed_time, '%w') type,
        </if>
        <if test="formatType == '%m'">
            date_format(o.completed_time, '%m') type,
        </if>
        u.id user_id
        FROM user u
        LEFT JOIN `order` o
        ON u.id = o.user_id
        LEFT JOIN order_item oi
        ON o.order_number = oi.order_number
        LEFT JOIN product p
        ON oi.product_id = p.id
        LEFT JOIN category c
        ON c.id = p.category_id
        where o.status = 5 and
        c.shop_id = #{shopId} and
        o.completed_time &gt;= #{startTime} and
        o.completed_time &lt;= #{endTime}
        group by
        <if test="formatType == '%w'">
            (day(o.completed_time)+WEEKDAY(o.completed_time-interval day(o.completed_time) day)) div 7 + 1
        </if>
        <if test="formatType == '%e'">
            date_format(o.completed_time, '%w')
        </if>
        <if test="formatType == '%m'">
            date_format(o.completed_time, '%m')
        </if>
        ) as temp group by user_id;
    </select>
    <select id="selectRecentOrderByUserId"  resultMap="OrderMap">
      select o.id, o.order_number, o.payment_time, o.deliver_time, o.store_time, o.accepted_time,
      o.completed_time, o.cancel_time, o.amount, o.user_id, o.create_time,
      o.update_time, o.estimated_time, o.status,
      b.id as bid, b.address, b.number,
      oi.id as oi_id, oi.quantity,
      p.id as pid, p.name, p.description, p.image_url, p.price
      from `order` o inner join box b on o.box_id = b.id
      inner join order_item oi on o.order_number = oi.order_number
      inner join product p on p.id = oi.product_id
      where o.user_id = #{userId,jdbcType=INTEGER}
      order by o.update_time desc limit 1
    </select>
</mapper>
